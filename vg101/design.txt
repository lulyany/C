OneCard工程大部分采用标准C代码实现（其中清空屏幕操作和平台相关，对于Windows和Linux有些不同的命令）。

几个.c文件的说明：
1. OneCard.c: 程序入口点，main函数，从这里启动开始运行。
	主要执行了 	a.用户命令行参数的解析
			b.初始化牌堆
			c.洗牌
			d.初始化玩家信息
			e.首轮发额外的牌来确定初始的玩牌顺序DealingOrderCards
			f.初始发牌
			g.RunGame开始运行游戏主体逻辑
2. UI.c：
	这个模块主要实现了和用户交互界面相关的功能：
	花色转为表达的字符串 Suit2Char
	点数转为表达的字符串 Rank2Char
	手中的牌的排序Sort（作业要求中有提到牌的展示顺序，按照花色点数）
	在界面上绘制扑克牌（DrawCards）

3. Log.c:
	主要是记录日志的功能函数（作业中要求游戏的步骤记录到日志文件中，就是那个onecard.log,(会议中说错了，不是log.txt,log.txt是我开发过程中的调试日志，没用，请忽略)）
4.Defs.h: 
	包含了数据类型的定义和常量的定义。其中最重要的是StCard结构体，这个是关于扑克牌的定义，包括花色和点数。这个结构体被多次用到。
5，Objs.c：
	游戏主体过程的函数定义在这里面。比较重要的包括Shuffle洗牌，InitDecks初始化牌堆（创建牌）， InitPlayers初始化 玩家信息，RunGame游戏运行。

	RunGame的主要思路是一个大循环，在游戏开始后，循环切换玩家，让玩家出牌，并且根据玩家出牌判断是否遇到游戏规则中的(Attack,Reverse,Skip, Defense)等情况。控制游戏的流程，比如若玩家手牌都出完了，则判定胜利；若玩家被attack却没有办法转移的时候，需要再摸牌；玩家被attack之后，则无需再摸牌等规则。
	期间调用了UI.c和Log.c中的功能进行界面的显示和日志的记录。




